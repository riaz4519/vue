
Skip to content

    Pull requests
    Issues
    Marketplace
    Explore

    @riaz4519

1
0

    0

riaz4519/vue
Code
Issues 0
Pull requests 0
Projects 0
Wiki
Insights
Settings
vue/note/vueninja2.txt
a003823 5 hours ago
@riaz4519 riaz4519 after dynamic css
243 lines (117 sloc) 3.55 KB
Lesson - 1 - introduction

	<script src="vue.js"></script>

	just add the vue cdn link or download the file and add it to the html file and this is your installation

Lesson - 2 - vue instance
	
	* creating a vue js instance

		new Vue({

		});

		this is called the instance 
		it controlled part of the application or full application .one app can have one instance or multiple instance.

		* the instance will hold data ,method and all that.

		*property : el - element

			this property gonna define which part of the application this instance gonna control

				new Vue({

					el:"#app"

				});
		*property : data - 
			where we gonna store all of our data.

			data object-

			data:{

			},

			with in this curly brackets there will be different key value pairs.

			data:{

				name:"fahim"

			}

			for out put this data we just gonna go to our app and

			<h1>{{ name }}</h1>

			its because its controlling the data on #app .

Lesson - 3 - Data and methods
	
	*property - methods - its a object so it will be working like key ,value pairs .

		methods:{

		}

		**function declearation inside methods:

			methods:{

				greet:function(){

					return "good morning";

				}

			}
		**calling the function


		<h1>{{ greet() }}</h1>

		**function parameter

			<h1>{{ greet('hello world') }}</h1>

			methods:{

			greet:function(time){

			return "hello world "+time;

			}

			}

		** this property

			this.name not this.data.name 

Lession - 4 - Data Binding
	
	Binding data to attribute of html element.

		v-bind - directive

		example:
		<a v-bind:href="website">Google</a>

		**short hand for v-bind = :


		data:{

			website:"https://www.google.com/"

		}

		**v-html 
			this is for outputting html to the dom 

			: does not work with v-html . : sorthand only work with v-bind which is attribute binding

Lesson - 5 - Events

	events are for action

	** v-on or @

	example v-on:click="function" or @click="function"

	<button v-on:click="age++">Add sum</button>
	<button v-on:click="add">Add sum</button>

	methods:{

		add:function(){

			this.age++
		}

	}

	***Dubble click

		@dblclick or v-on:dblclikc

	***Getting the x and y with mousemove

		v-on:mousemove or @mousemove

		this fuction always trigger and send a event propery to the function 

		@mousemove="updateXY"

		updateXY:fuction(event){

		event.offsetX;
		event.offsetY;

		}

Lesson - 6 - Event modifiers
	
	event modifiers effect the normal behaviors of html element and events

	** once event modifiers

	@click.onece="add()" or v-on:click.once="add()"

	** prevent - event modifiers

	<a href=""v-on:click.prevent="click">click me</a>
	
	this link not be going to the link the we wil give to the href. it will trigger the click function

Lesson - 7 - Keyboard Events & keyup modifiers

	keyboard events are those which react on keyboard activities.

	v-on:keyup="function" or @keyup="function"

	**modifiers

		for spacific key

		v-on:keyup.enter="function"

		this function gonna run when we press on enter button on keyboard

	**two button once

		v-on:keyup.alt.enter="function"

Lession - 8 - two way data binding

	** v-model="name" 

	this property work as two way.

	<input type="text" v-model="name">

	whenever we type something on the input field it will be set the value to name and also update the value at browser

Lesson - 9 - computed properties

	computed property run when needed.

	computed:{

		addToA:function(){

		},
		addToB:function(){

		}

	}


Lesson - 10 - dynamic css

	adding class with v-bind:class="{}" and it must  be in single curly brackets

		v-bind:class="{red:true,blue:true}"

		red and blue are classes 

		 **doing it dynamicly

		 	data:{

		 		available:true,
		 		nearby:true,

		 	}

		 	now 

		 	v-bind:class="{available:available}"

		 	if "available is true then the elemnt will get he class of available"

		 	available = !available


		 ** with computer properties

		 computed :{

		 compClasses:function(){

		 	return {

		 		available:this.available,

		 	}

		 }



		 }


Lesson - 11 - conditionals
	
	** v-if  and v-show

	<p v-if="false"> show</p>

	the show message will not be shown on the screen .same with the v-show method

	**v-else-if=""

	**difference between v-if and v-show

		when we use v-if 

		<p v-if="false" ></p>

		then the <p> tag will disapear .on the other hand if we use v-show the <p> tags style will become "display:none"
	

	



	

	








