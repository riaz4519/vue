Lesson - 1 - introduction

	<script src="vue.js"></script>

	just add the vue cdn link or download the file and add it to the html file and this is your installation

Lesson - 2 - vue instance
	
	* creating a vue js instance

		new Vue({

		});

		this is called the instance 
		it controlled part of the application or full application .one app can have one instance or multiple instance.

		* the instance will hold data ,method and all that.

		*property : el - element

			this property gonna define which part of the application this instance gonna control

				new Vue({

					el:"#app"

				});
		*property : data - 
			where we gonna store all of our data.

			data object-

			data:{

			},

			with in this curly brackets there will be different key value pairs.

			data:{

				name:"fahim"

			}

			for out put this data we just gonna go to our app and

			<h1>{{ name }}</h1>

			its because its controlling the data on #app .

Lesson - 3 - Data and methods
	
	*property - methods - its a object so it will be working like key ,value pairs .

		methods:{

		}

		**function declearation inside methods:

			methods:{

				greet:function(){

					return "good morning";

				}

			}
		**calling the function


		<h1>{{ greet() }}</h1>

		**function parameter

			<h1>{{ greet('hello world') }}</h1>

			methods:{

			greet:function(time){

			return "hello world "+time;

			}

			}

		** this property

			this.name not this.data.name 

Lession - 4 - Data Binding
	
	Binding data to attribute of html element.

		v-bind - directive

		example:
		<a v-bind:href="website">Google</a>

		**short hand for v-bind = :


		data:{

			website:"https://www.google.com/"

		}

		**v-html 
			this is for outputting html to the dom 

			: does not work with v-html . : sorthand only work with v-bind which is attribute binding

Lesson - 5 - Events

	events are for action

	** v-on or @

	example v-on:click="function" or @click="function"

	<button v-on:click="age++">Add sum</button>
	<button v-on:click="add">Add sum</button>

	methods:{

		add:function(){

			this.age++
		}

	}

	***Dubble click

		@dblclick or v-on:dblclikc

	***Getting the x and y with mousemove

		v-on:mousemove or @mousemove

		this fuction always trigger and send a event propery to the function 

		@mousemove="updateXY"

		updateXY:fuction(event){

		event.offsetX;
		event.offsetY;

		}

Lesson - 6 - Event modifiers
	
	event modifiers effect the normal behaviors of html element and events

	** once event modifiers

	@click.onece="add()" or v-on:click.once="add()"

	** prevent - event modifiers

	<a href=""v-on:click.prevent="click">click me</a>
	
	this link not be going to the link the we wil give to the href. it will trigger the click function

Lesson - 7 - Keyboard Events & keyup modifiers

	keyboard events are those which react on keyboard activities.

	v-on:keyup="function" or @keyup="function"

	**modifiers

		for spacific key

		v-on:keyup.enter="function"

		this function gonna run when we press on enter button on keyboard

	**two button once

		v-on:keyup.alt.enter="function"









